map $http_origin $cors_origin_header {
    default "";
    "~https://journal.policy-perspectives.org$" "$http_origin";
    "~https://.+digital.library.gwu.edu$" "$http_origin";
}

map $http_origin $allow_methods {
    default "";
    "~https://journal.policy-perspectives.org$" "OPTIONS, HEAD, GET, POST";
    "~https://.+digital.library.gwu.edu$" "OPTIONS, HEAD, GET, POST";
}

server {
    listen 443 ssl;
    server_name ${SERVER_NAME};
    root /opt/scholarspace/scholarspace-hyrax/public;

    add_header 'Access-Control-Allow-Origin' "$cors_origin_header" always;
    add_header 'Access-Control-Allow-Methods' "$allow_methods" always;

    ssl_certificate /opt/scholarspace/certs/${NGINX_CERTIFICATE};
    ssl_certificate_key /opt/scholarspace/keys/${NGINX_CERTIFICATE_KEY};
    # The following deploys your Ruby/Python/Node.js/Meteor app on Passenger.

    # Not familiar with Passenger, and used (G)Unicorn/Thin/Puma/pure Node before?
    # Yes, this is all you need to deploy on Passenger! All the reverse proxying,
    # socket setup, process management, etc are all taken care automatically for
    # you! Learn more at https://www.phusionpassenger.com/.
    passenger_enabled on;
    passenger_user scholarspace;

    # If this is a Ruby app, specify a Ruby version:
    passenger_ruby /usr/bin/ruby2.7;

    # Nginx has a default limit of 1 MB for request bodies, which also applies
    # to file uploads. The following line enables uploads of up to 50 MB:
    client_max_body_size 50M;
}
